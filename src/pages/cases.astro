---
import "../styles/style.css";
import MainLayout from "../layouts/MainLayout.astro";
---

<MainLayout title="Cases">
  <div class="cases-container">
    <div class="menu__item">
      <div class="menu__item-image_wrapper">
        <div class="menu__item-image_inner">
          <img class="menu__item-image" src="https://ester-profil.netlify.app/images/barselona.avif" />
        </div>
      </div>
      <div class="text-container">
        <div class="divider"></div>
        <div class="flex-text">
          <h2 class="menu__item-text"><span class="menu__item-innertext">Barselona</span></h2>
          <p>My 2nd semester exam project involved creating a completely reimagined website for the band Barselona.</p>
        </div>
      </div>
    </div>
    <div class="menu__item">
      <div class="menu__item-image_wrapper">
        <div class="menu__item-image_inner">
          <img class="menu__item-image" src="https://ester-profil.netlify.app/images/girl-talk.avif" />
        </div>
      </div>
      <div class="text-container">
        <div class="divider"></div>
        <div class="flex-text">
          <h2 class="menu__item-text"><span class="menu__item-innertext">Girl Talk</span></h2>
          <p>A one-pager for Girl Talk, showcasing their parental counseling service.</p>
        </div>
      </div>
    </div>
    <div class="menu__item">
      <div class="menu__item-image_wrapper">
        <div class="menu__item-image_inner">
          <img class="menu__item-image" src="https://ester-profil.netlify.app/images/cph-light.avif" />
        </div>
      </div>
      <div class="text-container">
        <div class="divider"></div>
        <div class="flex-text">
          <h2 class="menu__item-text"><span class="menu__item-innertext">CPH Light Festival</span></h2>
          <p>Redesigned the website for Copenhagen Light Festival with a fresh approach.</p>
        </div>
      </div>
    </div>
    <div class="menu__item">
      <div class="menu__item-image_wrapper">
        <div class="menu__item-image_inner">
          <img class="menu__item-image" src="/images/forest-flavours.avif" />
        </div>
      </div>
      <div class="text-container">
        <div class="divider"></div>
        <div class="flex-text">
          <h2 class="menu__item-text"><span class="menu__item-innertext">Vild Mad</span></h2>
          <p>A themed website for Supertusch, designed to educate 7th-grade students about foraging.</p>
        </div>
      </div>
    </div>
    <div class="menu__item">
      <div class="menu__item-image_wrapper">
        <div class="menu__item-image_inner">
          <img class="menu__item-image" src="/images/mette-mink.avif" />
        </div>
      </div>
      <div class="text-container">
        <div class="divider"></div>
        <div class="flex-text">
          <h2 class="menu__item-text"><span class="menu__item-innertext">Mette's Mink Mission</span></h2>
          <p>An interactive animated game exclusively designed and programmed by me.</p>
        </div>
      </div>
    </div>
  </div>
</MainLayout>

<style>
  .cases-container {
    padding-top: 12%;
  }
  .divider {
    width: 100%;
    height: 1px;
    margin: 0.2em 0;
    background: black;
  }
  .flex-text {
    height: 80px;
    display: flex;
    justify-content: space-between;
    padding: 0 10%;
    align-items: center;
  }

  .flex-text p {
    max-width: 350px;
  }
  .menu {
  }

  .menu__item {
    width: 100%;
    display: flex;
    flex-direction: column;
  }

  .menu__item-image_wrapper {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    width: 500px;
    height: 250px;
    pointer-events: none;
    opacity: 0;
  }

  .menu__item-image_inner .menu__item-image {
    left: 0;
    top: 0;
    height: 100%;
    width: 100%;
    object-fit: contain;
  }

  .menu__item-text {
    font-family: var(--font_header);
    font-weight: 700;
    text-transform: uppercase;
    font-size: 2.2rem;
    line-height: 1;
    color: var(--text-color);
    opacity: 1;
    transition: opacity 350ms ease;
    white-space: nowrap;
    overflow: hidden;
    cursor: pointer;
    /* text-align: center; */
  }

  .menu__item:hover .menu__item-text {
    color: #5364ffd2;
  }

  .menu__item:hover .menu__item-image_wrapper {
    z-index: -2;
  }

  .menu__item-innertext {
    text-align: center; /* Centerer teksten her ogs√• */
  }
</style>

<script>
  import { gsap } from "gsap";

  gsap
    .timeline()
    .set(".menu", { autoAlpha: 1 })
    .from(".menu__item-innertext", {
      delay: 1,
      duration: 0.85,
      xPercent: 25,
      yPercent: 125,
      stagger: 0.095,
      skewY: gsap.utils.wrap([-8, 8]),
      ease: "expo.out",
    })
    .set(".menu", { pointerEvents: "all" });

  gsap.defaults({
    duration: 0.55,
    ease: "expo.out",
  });

  const menuItems = document.querySelectorAll(".menu__item");

  menuItems.forEach((item) => {
    const imageWrapper = item.querySelector(".menu__item-image_wrapper");
    const imageWrapperBounds = imageWrapper.getBoundingClientRect();
    let itemBounds = item.getBoundingClientRect();

    const onMouseEnter = () => {
      gsap.set(imageWrapper, {
        scale: 0.8,
        xPercent: -50,
        yPercent: 50,
        rotation: -15,
      });
      gsap.to(imageWrapper, { opacity: 1, scale: 1, yPercent: 0, rotation: 0 });
    };

    const onMouseLeave = () => {
      gsap.to(imageWrapper, {
        opacity: 0,
        yPercent: -50,
        xPercent: -50,
        scale: 0.8,
        rotation: -15,
      });
    };

    const onMouseMove = ({ x, y }) => {
      let yOffset = itemBounds.top / imageWrapperBounds.height;
      yOffset = gsap.utils.mapRange(0, 1.5, -150, 150, yOffset);
      gsap.to(imageWrapper, {
        duration: 1.25,
        x: Math.abs(x - itemBounds.left) - imageWrapperBounds.width / 1.4,
        y: Math.abs(y - itemBounds.top) - imageWrapperBounds.height / 5 - yOffset,
      });
    };

    item.addEventListener("mouseenter", onMouseEnter);
    item.addEventListener("mouseleave", onMouseLeave);
    item.addEventListener("mousemove", onMouseMove);

    window.addEventListener("resize", () => {
      itemBounds = item.getBoundingClientRect();
    });
  });
</script>
