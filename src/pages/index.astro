---
// index.astro
import "../styles/style.css";
import Preloader from "../components/Preloader.astro";
import MainLayout from "../layouts/MainLayout.astro";
import Button from "../components/Button.astro";
import TextKasse from "../components/TextKasse.astro";
import Cases from "../components/Cases.astro";
---

<Preloader />
<MainLayout title="Code by Sebastian Engelbreth.">
  <div class="scrollbar-container">
    <article class="hero">
      <div class="spline_bg">
        <script type="module" src="https://unpkg.com/@splinetool/viewer@1.9.32/build/spline-viewer.js"></script>
        <spline-viewer url="https://prod.spline.design/XMTWLgbbW8U3r-Pa/scene.splinecode"></spline-viewer>
        <!-- <p>Helping brands to stand out in the digital era.</p> -->
      </div>
    </article>
    <div class="scroll-image">
      <img src="/iconer2/scroll.svg" alt="Scroll Icon" />
    </div>
  </div>
  <div class="border-px">
    <div class="hero_text">
      <p class="sentence">
        Together we build the blocks of your vision - no nonsense, just bold digital solutions that make your brand stand out.
        <div class="buttons-flex">
          <Button linket="#contact" style="primary">Contact me</Button>
        </div>
      </p>
    </div>
  </div>
  <div class="border-px">
    <div class="header-divider-group">
      <div class="header-divider">
        <div>
          <hr class="header-divider-line" />
        </div>
      </div>
      <div class="header-divider">
        <div>
          <h2 id="about">About</h2>
        </div>
      </div>
    </div>

    <TextKasse h2="Hey," image="/images/cv-photo.avif" image_alt="Billede af Sebastian Engelbreth">
      <div class="kasse-text">
        <h2>I'm <span class="input"></span></h2>
        <div class="kasse-text-p">
          <p>I am a 25-year-old passionate multimedia design student, based in Copenhagen, with a strong interest in code, digital design, and user experiences.</p>
          <p>
            <br />
            I am interested in jobs/internships where I can contribute solutions to tasks and challenges while also developing my professional skills and experience.
          </p>
        </div>
        <div class="line-behind-button"></div>
        <div>
          <Button linket="/files/resume.pdf" style="secondary">Download CV</Button>
        </div>
      </div>
    </TextKasse>

    <div class="container">
      <h2 class="text">Frontend Code<span class="text-behind">HTML, CSS, JavaScript, Astro, React & Next.js</span></h2>
      <h2 class="text">UX/UI<span class="text-behind">Figma, Adobe CC & Spline</span></h2>
      <h2 class="text">Audio<span class="text-behind">Ableton</span></h2>
      <h2 class="text">Teamwork<span class="text-behind">GitHub, Trello, Scrum etc.</span></h2>
      <h2 class="text">Practical Tools<span class="text-behind">Microsoft 365 (Excel, Word, Powerpoint)</span></h2>
    </div>
  </div>
  <div class="header-divider-group">
    <div class="header-divider">
      <div>
        <hr class="header-divider-line" />
      </div>
    </div>
    <div class="header-divider">
      <div>
        <h2 id="former-cases">Former Cases</h2>
      </div>
    </div>
  </div>
  <Cases />
</MainLayout>
<script>
  import Typed from "typed.js";

  const typed = new Typed(".input", {
    strings: ["Sebastian Engelbreth", "Web Developer", "UI/UX Designer"],
    typeSpeed: 70,
    backSpeed: 65,
    loop: true,
  });
</script>

<style>
  .line-behind-button {
    position: absolute;
    top: 246%; /* Juster denne værdi for at placere linjen korrekt i forhold til knappen */
    left: 8%;
    width: 580px; /* Gør linjen så bred som nødvendigt */
    height: 0.5px; /* Tykkelsen af linjen */
    background-color: black; /* Vælg en passende farve til linjen */
    z-index: 0;
  }

  .border-px {
    border-bottom: 0.5px solid #c5c5c562;
    margin-bottom: 160px;
  }
  .scrollbar-container {
    position: relative;
    height: 100vh;
    margin-bottom: 80px;
    border-bottom: 0.5px solid #c5c5c562;
  }

  .hero_text {
    margin-inline: 16%;
    gap: 160px;
  }

  .header-divider-group {
    margin-bottom: 85px;
  }
  .header-divider {
    display: flex;
    justify-content: center;
    h2 {
      margin-top: 10px;
      font-size: 2.4rem;
    }
    .header-divider-line {
      background: var(--color_text);
      width: 25px;
    }
    hr {
      height: 2.5px;
    }
  }

  section.parallax-background-section {
    position: relative;
    height: 100vh;
    overflow: hidden;
  }
  .parallax-background-element {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-size: cover;
    background-attachment: fixed;
  }

  .scroll-image {
    position: absolute; /* Gør billedet fast i viewport */
    top: 520px;
    left: 8%; /* Centrerer billedet horisontalt */
    transform: translateX(-50%);
    z-index: 10;
  }

  .scroll-image img {
    width: 50px; /* Juster størrelsen som ønsket */
    height: auto;
  }

  .kasse-text h2 {
    font-size: 2rem;
  }

  .input {
    color: var(--color_blue);
  }
  .kasse-text-p {
    margin-top: 25px;
  }
  /* Preloader styles */
  #preloader {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: rgba(255, 255, 255, 0.8); /* Baggrundsfarve */
    display: flex;
    justify-content: center;
    align-items: center;
    z-index: 9999;
    transition: opacity 0.3s ease; /* Glidende overgang */
  }

  .hidden {
    opacity: 0;
    pointer-events: none; /* Forhindrer interaktion, når den er skjult */
  }

  .visible {
    opacity: 1; /* Gør preloaderen synlig */
  }
  p {
    font-size: var(--font_size_medium);
    line-height: 150%;
    font-weight: 500;
  }

  .container {
    margin-bottom: 160px;
    padding-inline: 8%;
  }

  .text {
    font-family: var(--font_body);
    font-size: 4rem;
    letter-spacing: -0.01em;
    line-height: 100%;
    width: 100%;
    color: rgb(182, 182, 182, 0.2);
    background: linear-gradient(to right, var(--color_text), var(--color_text)) no-repeat;
    -webkit-background-clip: text;
    background-clip: text;
    background-size: 0%;
    transition: background-size cubic-bezier(0.1, 0.5, 0.5, 1) 0.5s;

    border-bottom: 1px solid #2f2b28;

    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    position: relative;
  }

  .text-behind {
    display: flex;
    text-align: center;
    position: absolute;
    width: 100%;
    height: 100%;
    background: var(--color_blue);
    color: var(--color_white);
    font-size: 2.25rem;

    clip-path: polygon(0 50%, 100% 50%, 100% 50%, 0 50%);
    transform-origin: center;
    transition: all cubic-bezier(0.1, 0.5, 0.5, 1) 0.4s;

    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .text:hover > span {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
  }

  a {
    text-decoration: none;
    color: inherit;
  }

  .spline_bg {
    height: 100vh;
    width: auto;
  }
  .center-icons {
    display: flex;
    align-items: center;
  }
  .content-container {
    margin-top: 60px;
  }

  .sociale_links {
    display: flex;
    gap: 12px;
  }
  .sociale_links a {
    background-color: var(--bg_color);
    border-radius: 50px;
    width: 40px;
    height: auto;
    font-size: var(--font_size_medium);
  }
  .sociale_links a:hover {
    background-color: var(--color_blue);
  }

  .navigation {
    z-index: 1;
  }

  .about {
    height: 100vh;
    width: 100%;
    background: url();
    background-position: top;
    background-size: cover;
    display: flex;
    align-items: center;
    justify-content: center;
  }

  .about-content h4 {
    font-size: 1.6rem;
  }

  .about-content h1 {
    font-size: 4rem;
    font-weight: 900;
    margin: 20px 0px 20px;
    line-height: 1.2;
  }

  .about-content {
    display: grid;
    grid-template-columns: repeat(5, 1fr);
    grid-template-rows: repeat(5, 1fr);
    grid-column-gap: 0px;
    grid-row-gap: 0px;
  }

  .div1 {
    grid-area: 2 / 1 / 6 / 4;
  }
  .div2 {
    grid-area: 1 / 4 / 6 / 6;
  }

  h1 {
    font-size: 3.8cqw;
  }

  .sentence {
    clip-path: polygon(0 0, 100% 0, 100% 100%, 0% 100%);
    font-size: 2rem;
    font-weight: 300;
    margin-bottom: 60px;
  }
  .buttons-flex {
  }

  @media screen and (min-width: 768px) {
  }

  @media screen and (min-width: 1024px) {
    .hero_text {
      display: flex;
    }
  }

  @media screen and (min-width: 1440px) {
    .kasse-text h2 {
      font-size: 3rem;
    }
  }
</style>

<script>
  import { gsap } from "gsap";
  import { ScrollTrigger } from "gsap/ScrollTrigger";
  import { TextPlugin } from "gsap/TextPlugin";
  import SplitType from "split-type";
  import Lenis from "lenis";

  gsap.registerPlugin(TextPlugin, ScrollTrigger);

  // Initialize a new Lenis instance for smooth scrolling
  const lenis = new Lenis();

  // Listen for the 'scroll' event and log the event data to the console
  lenis.on("scroll", (e) => {
    console.log(e);
  });

  // Synchronize Lenis scrolling with GSAP's ScrollTrigger plugin
  lenis.on("scroll", ScrollTrigger.update);

  // Add Lenis's requestAnimationFrame (raf) method to GSAP's ticker
  gsap.ticker.add((time) => {
    lenis.raf(time * 1000); // Convert time from seconds to milliseconds
  });

  // Disable lag smoothing in GSAP to prevent any delay in scroll animations
  gsap.ticker.lagSmoothing(0);

  // Scroll to section when navigation link is clicked, with slower scroll
  document.querySelectorAll(".nav a").forEach((link) => {
    link.addEventListener("click", (e) => {
      e.preventDefault();
      const targetId = e.currentTarget.getAttribute("href").substring(1); // Get the target ID
      const targetElement = document.getElementById(targetId); // Find the target element by ID

      if (targetElement) {
        lenis.scrollTo(targetElement, {
          duration: 1.5, // Set the duration for slower scroll (default is 1)
          easing: (t) => (t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t),
        });
      }
    });
  });

  // GSAP animations for text elements
  const textElements = gsap.utils.toArray(".text");
  textElements.forEach((text) => {
    gsap.to(text, {
      backgroundSize: "100%",
      ease: "none",
      scrollTrigger: {
        trigger: text,
        start: "center 90%",
        end: "center 45%",
        scrub: true,
      },
    });
  });

  gsap.to(".scroll-image", {
    scale: 2.5, // Skaler billedet til 1.5 gange størrelsen
    opacity: 0,
    ease: "power1.out", // En blød easing-effekt
    scrollTrigger: {
      trigger: ".scroll-image",
      start: "top 80%",
      end: "bottom 50%",
      pin: true,
      scrub: 1,
    },
  });

  gsap.to(".scroll-image img", {
    rotation: 360,
    duration: 10,
    repeat: -1,
    ease: "linear",
  });

  const myText = new SplitType(".sentence");

  gsap.to(".word", {
    y: 0,
    stagger: 0.01,
    duration: 0.1,
    scrollTrigger: {
      trigger: ".sentence",
      start: "top 98%",
      end: "bottom",
      toggleActions: "play reset play reset",
    },
  });

  gsap.to(".billede", {
    y: -20,
    ease: "sine.inOut",
    scrollTrigger: {
      trigger: ".billede",
      start: "top bottom",
      scrub: 1,
    },
  });

  gsap.to(".primary", {
    y: -20,
    ease: "sine.inOut",
    scrollTrigger: {
      trigger: ".primary",
      start: "top bottom",
      end: "bottom 20%",
      scrub: 1,
    },
  });

  gsap.to(".secondary", {
    x: 10,
    ease: "sine.inOut",
    scrollTrigger: {
      trigger: ".secondary",
      start: "top bottom",
      scrub: 1,
    },
  });

  gsap.fromTo(
    "footer",
    {
      y: 250, // Starter footeren 50px under dens endelige position
    },
    {
      y: 0, // Flytter footeren op til dens endelige position
      backgroundColor: "var(--color_text)",
      ease: "power1.out",
      duration: 2,
      scrollTrigger: {
        trigger: "footer",
        start: "top 100%", // Start animationen før footeren er helt i viewporten
        end: "bottom 90%",
        scrub: true,
      },
    }
  );
</script>
